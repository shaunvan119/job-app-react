{"version":3,"sources":["theme/theme.js","components/Header/index.js","components/SearchBar/index.js","components/Job/JobCard.js","components/Job/NewJobModel.js","firebase/config.js","components/Job/ViewJobModel.js","App.js","index.js"],"names":["secondary","createMuiTheme","typography","fontFamily","palette","primary","main","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","Header","props","Box","py","bgcolor","Grid","container","justify","item","xs","display","justifyContent","Typography","variant","Button","onClick","openNewJobModel","disableElevation","useStyles","makeStyles","wrapper","border","backgroundColor","boxShadow","flex","margin","SearchBar","useState","loading","setLoading","type","location","jobSearch","setJobSearch","handleChange","e","persist","oldState","target","name","value","search","a","fetchJobsCustom","classes","p","mt","mb","className","Select","onChange","disableUnderline","MenuItem","disabled","CircularProgress","size","theme","cursor","transition","borderLeft","companyName","fontSize","spacing","skillChip","JobCard","alignItems","title","skills","map","skill","direction","differenceInMinutes","Date","now","postedOn","open","included","initState","companyUrl","link","description","NewJobCard","jobDetails","setJobDetails","handleSubmit","field","length","postJob","closeModel","Dialog","newJobModel","fullWidth","DialogTitle","IconButton","Close","DialogContent","FilledInput","autoComplete","placeholder","multiline","rows","includes","filter","s","concat","addRemoveSkill","DialogActions","width","firestore","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","info","VeiwJobModel","Object","keys","job","format","ml","component","href","App","jobs","setJobs","customSearch","setCustomSearch","setNewJobModel","viewJob","setViewJob","fetchJobs","collection","orderBy","get","req","tempJobs","docs","data","id","toDate","where","add","FieldValue","serverTimestamp","useEffect","ThemeProvider","my","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bea6fc18.chunk.js","sourcesContent":["\nimport { createMuiTheme } from \"@material-ui/core\";\n \nconst primary = \"#339bd4\";\nconst secondary = \"#339bd4\";\n\n\n/* function to export UI themes and passing them into CSS styling, this folder is the theme pallet for our styling which is called within other files */\nexport default createMuiTheme({  \n typography: {\n   fontFamily: \"Poppins, sans-serif\",\n },\n palette: {\n   primary: {\n     main: primary,\n\n    },\n    secondary: {\n      main: secondary,\n    },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: \"8px 24px 16px 24px\",\n      },\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 600,\n        textTransform: \"none\",\n        color: secondary,\n        padding: \"6px 24px\",\n      },\n      outlined: {\n        borderRadius: \"35px\",\n        borderColor: secondary,\n        padding: \"6px 20px\",\n      },\n    },\n    MuiSelect: {\n      filled: {\n        padding: \"15px 0 15px 15px\",\n      },\n    },\n    MuiFilledInput: {\n      input: {\n        height: \"49px\",\n        padding: \"0px 0 0 10px\",\n      },\n    },\n  },\n });\n ","import React from 'react';\nimport { Box, Grid, Typography, Button } from '@material-ui/core'\n\n\n\n/* importing theme from UI theme folder, containing the Grid, Box, Typo, Button*/\nexport default function  Header(props)  {\n    \n    return (\n<Box py={15} bgcolor=\"#572d80\" color=\"white\">\n    <Grid container justify=\"center\">\n    <Grid item xs={10}>\n    <Box display=\"flex\" justifyContent=\"space-between\">\n    <Typography variant = \"h5\"> PT RECRUITMENT\n    </Typography>\n    <Button\n    onClick={props.openNewJobModel} \n    variant=\"contained\" \n    color=\"primary\" \n    disableElevation>\n    Post a Job\n    </Button>\n    </Box>\n    </Grid>\n    </Grid>\n</Box>\n\n\n)};","import React, { useState } from 'react';\nimport { Box, Button, Select, MenuItem, makeStyles, CircularProgress } from '@material-ui/core'\n\n\n/* importing theme from UI theme folder, containing the Grid, Box, Typo, Button*/\nconst useStyles = makeStyles({\n    wrapper:{\n        border: \"1px solid grey\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        boxShadow: \"Opx 1px 5px rgba(0, 0, 0.1)\",\n        borderRadius: \"5px\",\n        \"& > *\": {\n            flex: 1,\n            height: \"45px\",\n            margin: \"8px\",\n        },\n    },\n});\n/* functional componenet for the search bar*/\nexport default function SearchBar(props)  {\n    const [loading, setLoading] = useState(false)\n    const [jobSearch, setJobSearch] = useState({\n        type: \"Full time\",\n        location: \"VIC\",\n    });\n\n    const handleChange = (e) => {\n        e.persist();\n        setJobSearch((oldState) => ({ \n            ...oldState, \n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    const search = async () => {\n        setLoading(true);\n        await props.fetchJobsCustom(jobSearch)\n        setLoading(false);\n    };\n\n    const classes = useStyles(); /* funtional component to pass in line 6 UI Stryles*/\n    return (\n        <Box p={2} mt={-5} mb={2} className= {classes.wrapper}> {/* Search bar*/}\n            <Select onChange={handleChange} value={jobSearch.type} name=\"type\" disableUnderline variant=\"filled\">\n                <MenuItem value=\"Full time\">Full Time</MenuItem>\n                <MenuItem value=\"Part time\">Part time</MenuItem>\n                <MenuItem value=\"Contract\">Contract</MenuItem>\n            </Select>\n            <Select onChange={handleChange} value={jobSearch.location} name=\"location\" disableUnderline variant=\"filled\">\n                <MenuItem value=\"VIC\">VIC</MenuItem>\n                <MenuItem value=\"ACT\">ACT</MenuItem>\n                <MenuItem value=\"NSW\">NSW</MenuItem>\n                <MenuItem value=\"QLD\">QLD</MenuItem>\n                <MenuItem value=\"NT\">NT</MenuItem>\n                <MenuItem value=\"WA\">WA</MenuItem>\n                <MenuItem value=\"SA\">SA</MenuItem>\n                <MenuItem value=\"TAS\">TAS</MenuItem>\n            </Select>\n            <Button \n            disabled={loading} \n            variant=\"contained\" \n            color=\"primary\" \n            disableElevation\n            onClick={search}\n            >\n            {loading ? (\n            <CircularProgress color=\"secondary\" size={22}/>\n            ) : (\n            \"Search\"\n            )}\n            </Button>\n        </Box>\n    );\n\n}","import React from \"react\";\nimport { Box, Grid, Typography, Button, makeStyles } from \"@material-ui/core\";\nimport { differenceInMinutes } from 'date-fns' /* date formating function for line 61*/\n\n\n\n/* Jobcard is for the search results*/\n/* importing theme from UI theme folder, for the search results */\n/* below is a function calling theme to access the theme object folder*/\n\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n    border: '1px solid #e8e8e8',\n    cursor: \"pointer\",\n    transition:'.3s',\n/* when cursor hovers over the job it changes the below styling */\n    \"&:hover\": { \n        boxShadow: \"0px 5ps 25px rgba(0, 0, 0, 0.1)\",\n        borderLeft: \"6px solid #4D64E4\",\n    },\n    },\n    companyName: {\n     fontSize: \"13.5px\",\n     backgroundColor: theme.palette.primary.main,\n     padding: theme.spacing(0.75),\n     borderRadius: \"5px\",\n     display: \"inline-block\",\n     fontWeight: 600,\n    },\n    skillChip: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.75),\n        fontSize: \"14.5px\",\n        borderRadius: \"5px\",\n        fontWeight: 600,\n        backgroundColor: theme.palette.secondary.main,\n        color: \"#fff\",\n    },\n}));\n\nexport default function JobCard(props) {\n    const classes = useStyles()\n    return (\n        <Box p={2} className={classes.wrapper}> {/* wrapper line 5 class name */}\n           <Grid container alignItems=\"center\">\n           <Grid item xs>\n                <Typography variant=\"subtitle1\">{props.title}</Typography>\n                <Typography className={classes.companyName} variant=\"subtitle1\">{props.companyName}</Typography>\n            </Grid>\n            <Grid item container xs>\n                {props.skills.map((skill) => ( /* skills are being passed down as props*/\n                    <Grid key={skill} className={classes.skillChip} item>  {/* Accessing Skillship line 31 */}\n                    {skill}\n                    </Grid>\n                    ))}\n            </Grid>\n            <Grid item container direction=\"column\" alignItems=\"flex-end\" xs>\n            <Grid item>\n                <Typography variant=\"caption\">\n                  {differenceInMinutes(Date.now(), props.postedOn)} min ago | {props.type} | {props.location} {/*passing props to display time, location and type in the serach return results*/}\n                </Typography>\n                </Grid>\n                <Grid item>\n                <Box mt={2}> {/* Margin for the view button*/}\n                <Button onClick={props.open} variant=\"outlined\">View</Button>\n                </Box>\n                </Grid>\n            </Grid>\n        </Grid>\n        </Box>\n    );\n};","import React, { useState } from \"react\"; /*The useState() Hook that allows you to have state variables in functional components*/\nimport { Box, \n         Grid, \n         FilledInput, \n         Select, \n         MenuItem, \n         Dialog, \n         DialogTitle, \n         DialogContent, \n         DialogActions, \n         makeStyles, /* Allow to creat a style sheet*/\n         Typography, \n         Button, \n         IconButton,  /* Icon button is our cross button used to close the new job window*/\n         CircularProgress } from \"@material-ui/core\";\n\nimport { Close as CloseIcon } from '@material-ui/icons' /* cross button import from icon button*/\n\n/* New Job model is for posting of the Job*/\n\n/* Style sheet function for skill chips, funtion was used to call theme, rather then creating a object*/\nconst useStyles = makeStyles ((theme) => ({\n    skillChip: {\n        margin: theme.spacing(0.5),\n        padding: theme.spacing(0.75),\n        fontSize: \"14.5px\",\n        borderRadius: \"5px\",\n        fontWeight: 600,\n        border: `1px solid ${theme.palette.secondary.main}`,\n        color: theme.palette.secondary.main,\n        cursor: \"pointer\",\n/* hover over event, skill chip changes color when cursure hovers over*/\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main,\n            color: \"#fff\",\n        }\n    },\n    included: {\n        backgroundColor: theme.palette.secondary.main,\n            color: \"#fff\",\n    }\n}));\n\nconst initState = {\n    title:\"\",\n        type:\"Full time\",\n        companyName:\"\",\n        companyUrl:\"\",\n        location:\"Remote\",\n        link:\"\",\n        description:\"\",\n        skills: [],\n};\n\n\nexport default function NewJobCard(props)  {\n    const [loading, setLoading] = useState(false)\n    const [jobDetails, setJobDetails] = useState(initState);\n/* Handling the change to the above state and overiding, and target.name\nto the below titles, the purpusde is to change the fields with in the\nnew job post*/\n    const handleChange = (e) => {\n        e.persist();\n        setJobDetails((oldState) => ({ \n            ...oldState, \n            [e.target.name]: e.target.value,\n        }));\n    };\n/* Passing the skill as a argument from line 52, then checking if we need to add or remove\nold array for skills*/\n    const addRemoveSkill = (skill) => \n        jobDetails.skills.includes(skill)\n        ? setJobDetails((oldState) => ({ \n            ...oldState, \n            skills: oldState.skills.filter((s) => s === skill),\n        }))\n        : setJobDetails((oldState) => ({ \n            ...oldState, \n            skills: oldState.skills.concat(skill),\n        }));\n/* passing on from line 81 in App.js to a handle change, this is called \non line 240 when the user submits the button*/\n    const handleSubmit = async () => {\n        for (const field in jobDetails) {\n            if(typeof jobDetails[field] === 'string' && !jobDetails[field]) return;   \n        }\n        if(!jobDetails.skills.length) return;\n        setLoading(true);\n        await props.postJob(jobDetails);\n        closeModel();\n    };\n\n    const closeModel = () => {\n        setJobDetails(initState)\n        setLoading(false);\n        props.closeModel();\n\n    };\n\n    \n    const classes = useStyles(); /* Hook function to use styles from line 22 */\n    const skills = [\n        \"Cert III Fitness\",\n        \"Cert IV Fitness\",\n        \"First Aid\",\n        \n\n    ];\n\n    /* components for displaying \n    -Dialog wraps the below model and contains the whole new job model \n    -Dialog title, displays the DialogTitle (post Job)\n    -Dialog Content contains the main grid and further grid components for the job listing\n    -Dialog actions \n    */\n    return (\n        <Dialog open={props.newJobModel} fullWidth>  \n        <DialogTitle>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                Post Job\n                <IconButton onClick={closeModel}> {/* close icon button*/}\n                    <CloseIcon/>\n                </IconButton>\n            </Box>\n        </DialogTitle>\n        <DialogContent>\n            <Grid container spacing={2}>\n            <Grid item xs={6}>\n            <FilledInput\n            onChange={handleChange} \n            name=\"title\"\n            value={jobDetails.title}\n            autoComplete=\"off\"\n            placeholder=\"Job title *\" \n            disableUnderline \n            fullWidth />\n            </Grid>\n            <Grid item xs={6}>\n            <Select\n            onChange={handleChange}\n            fullWidth\n            name=\"type\"\n            value={jobDetails.type}\n            disableUnderline \n            variant=\"filled\" \n            >\n                <MenuItem value=\"Full time\">Full Time</MenuItem>\n                <MenuItem value=\"Part time\">Part time</MenuItem>\n                <MenuItem value=\"Contract\">Contract</MenuItem>\n            </Select>\n            </Grid>\n            <Grid item xs={6}>\n            <FilledInput              \n            onChange={handleChange}\n            name=\"companyName\"\n            value={jobDetails.companyName}\n            autoComplete=\"off\"\n            placeholder=\"Company name *\" \n            disableUnderline \n            fullWidth \n            />\n            </Grid>\n            <Grid item xs={6}>\n            <FilledInput\n            onChange={handleChange}\n            name=\"companyUrl\"\n            value={jobDetails.companyUrl}\n            autoComplete=\"off\"\n            placeholder=\"Company URL *\" \n            disableUnderline \n            fullWidth \n            />\n            </Grid>\n            <Grid item xs={6}>\n            <Select\n            onChange={handleChange}\n            name=\"location\"\n            value={jobDetails.location}\n            fullWidth \n            disableUnderline \n            variant=\"filled\" \n            >\n                <MenuItem value=\"VIC\">VIC</MenuItem>\n                <MenuItem value=\"ACT\">ACT</MenuItem>\n                <MenuItem value=\"NSW\">NSW</MenuItem>\n                <MenuItem value=\"QLD\">QLD</MenuItem>\n                <MenuItem value=\"NT\">NT</MenuItem>\n                <MenuItem value=\"WA\">WA</MenuItem>\n                <MenuItem value=\"SA\">SA</MenuItem>\n                <MenuItem value=\"TAS\">TAS</MenuItem>\n            </Select>\n            </Grid>\n            <Grid item xs={6}>\n            <FilledInput\n            onChange={handleChange}\n            name=\"link\"\n            value={jobDetails.link}\n            autoComplete=\"off\"\n            placeholder=\"Job Link *\" \n            disableUnderline \n            fullWidth \n            />\n            </Grid>\n            <Grid item xs={12}>\n            <FilledInput\n            onChange={handleChange}\n            name=\"description\"\n            value={jobDetails.description}\n            autoComplete=\"off\"\n            placeholder=\"Job Desription *\" \n            disableUnderline \n            fullWidth\n            multiline\n            rows={4}\n            />\n            </Grid>\n            </Grid> \n            <Box mt={2}>                     {/* Box which containes the skills*/}\n            <Typography>Skills*</Typography>  {/* Material-UI component used to standardize the text and its related CSS properties*/}\n            <Box display=\"flex\">              {/* Box component that displays the skill chips*/}\n                {skills.map((skill) => (       /* Array which maps over each skill box*/\n                    <Box \n                    onClick={() => addRemoveSkill(skill)} \n                    className={`${classes.skillChip} \n                    ${jobDetails.skills.includes(skill) && classes.included}`} \n                    key={skill}>{skill}</Box>\n                ))}\n            </Box>\n            </Box>\n        </DialogContent>\n        <DialogActions>\n        <Box color=\"red\" \n             width=\"100%\" \n             display=\"flex\" \n             justifyContent=\"space-between\"\n             alignItems=\"center\"\n             >\n            <Typography variant=\"caption\">*Required fields</Typography>\n            <Button                              /* Button and function for post job*/\n            onClick={handleSubmit} \n            variant=\"contained\"                 \n            disableElevation                    /* disabling box shadow from Materail UI*/\n            color=\"primary\"\n            disabled={loading}> \n            {loading ? (\n            <CircularProgress color=\"secondary\" size={22}/>\n            ) : (\n            \"Post Job\"\n            )}\n            </Button>\n        </Box>\n        </DialogActions>\n        </Dialog>\n    );\n};","\n/* importing the firebase project */\n\nimport app from \"firebase/app\";\nimport \"firebase/firestore\";\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAsR0Irc1BznuqHo6nI48efAhUNxX2elFg\",\n    authDomain: \"job-app-react.firebaseapp.com\",\n    projectId: \"job-app-react\",\n    storageBucket: \"job-app-react.appspot.com\",\n    messagingSenderId: \"929999226467\",\n    appId: \"1:929999226467:web:1ad51ad8c3b963dfc49a56\"\n  };\n  \n  const firebase = app.initializeApp(firebaseConfig);  /* calls the above config to conect to the firebase */\n  const firestore = firebase.firestore(); /* conecting to firestore */\n\n\n  /* intitialize Firbase application */\n  export{ firebase, firestore, app };","import React from \"react\";\nimport { Box, \n        Grid, \n        Dialog, \n        DialogTitle, \n        DialogContent, \n        DialogActions, \n        makeStyles, \n        Typography, \n        Button, \n        IconButton, \n         } from \"@material-ui/core\";\n        import { Close as CloseIcon } from \"@material-ui/icons\";\n        import { format } from \"date-fns\";\n\n\n        const useStyles = makeStyles((theme) => ({\n            info: {\n                '& > *' : {\n                    margin: '4px',\n                },\n            },\n            skillChip: {\n                margin: theme.spacing(0.5),\n                padding: theme.spacing(0.75),\n                fontSize: \"14.5px\",\n                borderRadius: \"5px\",\n                fontWeight: 600,\n                backgroundColor: theme.palette.secondary.main,\n                color: \"#fff\",\n            },\n        }));\n\nexport default function VeiwJobModel(props)  {\n    const classes = useStyles()\n\n    return (\n    <Dialog open={!!Object.keys(props.job).length} fullWidth>  \n        <DialogTitle>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                {props.job.title} @ {props.job.companyName}\n                <IconButton onClick={props.closeModel}>\n                    <CloseIcon/>\n                </IconButton>\n            </Box>\n        </DialogTitle>\n        <DialogContent>\n            <Box>\n              <Box className={classes.info} display= \"flex\">\n                  <Typography variant=\"caption\">Posted on:</Typography>\n                  <Typography variant=\"body2\">\n                  {props.job.postedOn && \n                  format(props.job.postedOn, \"dd/MMM/yyy HH:MM\")}\n                  </Typography>\n              </Box>  \n              <Box className={classes.info} display= \"flex\">\n                  <Typography variant=\"caption\">Job type:</Typography>\n                  <Typography variant=\"body2\">{props.job.type}\n                  </Typography>\n              </Box>\n              <Box className={classes.info} display= \"flex\">\n                  <Typography variant=\"caption\">Job location:</Typography>\n                  <Typography variant=\"body2\">{props.job.location}\n                  </Typography>\n              </Box>\n              <Box className={classes.info} display= \"flex\">\n                  <Typography variant=\"caption\">Job desription:</Typography>\n                  <Typography variant=\"body2\">{props.job.description}\n                  </Typography>\n              </Box>\n              <Box className={classes.info} display= \"flex\">\n                  <Typography variant=\"caption\">Company name:</Typography>\n                  <Typography variant=\"body2\">{props.job.companyName}\n                  </Typography>\n              </Box>\n              <Box className={classes.info} display= \"flex\">\n                  <Typography variant=\"caption\">Company website:</Typography>\n                  <Typography variant=\"body2\">{props.job.companyUrl}\n                  </Typography>\n              </Box>\n              <Box ml={0.5}>\n                  <Typography variant=\"caption\">Skills:</Typography>\n                  <Grid container alignItems=\"center\">\n                  {props.job.skills &&\n                   props.job.skills.map((skill) => (\n                       <Grid item key={skill} className= {classes.skillChip}>\n                       {skill}\n                       </Grid>\n                   ))}\n                  </Grid>\n              </Box>\n            </Box>\n        </DialogContent>\n        <DialogActions>\n            <Button \n            variant=\"outlined\" \n            component=\"a\" \n            href={props.job.link} \n            target=\"_blank\">Apply</Button>\n        </DialogActions>\n        </Dialog>\n);\n}","import React, { useState, useEffect } from \"react\"; /* use effect is triggered on every render, use state hook is used to implement the state with in the finction componenets in react */\nimport { Box, Grid, ThemeProvider, CircularProgress, Button } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header/\";\nimport SearchBar from \"./components/SearchBar\";\nimport JobCard from \"./components/Job/JobCard\";\nimport NewJobModel from \"./components/Job/NewJobModel\";\nimport { firestore, app } from \"./firebase/config\";\nimport { Close as CloseIcon } from \"@material-ui/icons\"\nimport ViewJobModel from \"./components/Job/ViewJobModel\";\n\n\nexport default function App()  {\nconst [jobs, setJobs] = useState([]); /* array of jobs and setJobs allows us to change the state */\nconst [loading, setLoading] = useState(true); /* shows the user the page is loading */\nconst [customSearch, setCustomSearch] = useState(false);\nconst [newJobModel, setNewJobModel] = useState(false)\nconst [viewJob, setViewJob] = useState({});\n\n/* Fecthing the jobs from firebase and returning a array */\nconst fetchJobs = async () => {\n    setCustomSearch(false)\n    setLoading(true);\n    const req = await firestore\n    .collection(\"jobs\") /* calling the Job collection */\n    .orderBy(\"postedOn\", \"desc\") /* fecth jobs by order decending order */\n    .get();\n  /* fecting the jobs and looping over array and returning the data */  \nconst tempJobs = req.docs.map((job) => ({\n    ...job.data(), /* spreading the job and returninf the job ID from firebase */\n    id: job.id, \n    postedOn: job.data().postedOn.toDate(), /* calling the Jod ID and the posted on time stamp displayed on the page */\n}));\nsetJobs(tempJobs); /* calling the array from firebase */\nsetLoading(false);\n};\n\nconst fetchJobsCustom = async (jobSearch) => {\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore\n    .collection(\"jobs\")\n    .orderBy(\"postedOn\", \"desc\")\n    .where(\"location\", '==', jobSearch.location)\n    .where(\"type\", '==', jobSearch.type)\n    .get();\nconst tempJobs = req.docs.map((job) => ({\n    ...job.data(), \n    id: job.id, \n    postedOn: job.data().postedOn.toDate(), \n}));\nsetJobs(tempJobs);\nsetLoading(false);\n\n}\n\n/* passing jobs as a argument and making a request to save it in firestore, importing from \nfirebase config file*/\nconst postJob = async jobDetails => {\n    await firestore.collection('jobs').add({\n        ...jobDetails,\n        postedOn: app.firestore.FieldValue.serverTimestamp(),\n    });\n    fetchJobs();\n};\n\n/* Fecthing the jobs from firebase and returning a array \ntakes in two argument, first argument is triggered on evey render,\nsecound argument is a dependency that makes the decision on weatrher \nor not it should be rendered*/\nuseEffect(() => {\n    fetchJobs(); /* function is called when the user opens the web page */\n}, []);\n\n return (\n <ThemeProvider theme={theme}> {/* importing theme from UI theme folder */}\n <Header openNewJobModel={() => setNewJobModel(true)}/>\n <NewJobModel \n closeModel={() => setNewJobModel(false)} \n newJobModel={newJobModel} \n postJob={postJob}  /* passing in prop postjob from line 59*/\n />\n <ViewJobModel job={viewJob} closeModel={() => setViewJob({})} />\n <Box mb={3}>\n <Grid container justify=\"center\">\n <Grid item xs={10}>\n <SearchBar fetchJobsCustom={fetchJobsCustom} />\n\n {loading ? ( \n     <Box display=\"flex\" justifyContent=\"center\">\n <CircularProgress />\n     </Box>\n     ) : ( \n         <>\n         {customSearch && (\n         <Box my={2} display=\"flex\" justifyContent=\"flex-end\">\n             <Button onClick={fetchJobs}>\n             <CloseIcon size={20} />\n             Custom Search\n             </Button>\n         </Box>\n         )}\n      {jobs.map((job) => ( \n          <JobCard open={() => setViewJob(job)} key={job.id} {...job} />\n        ))}\n      </>\n      )}\n </Grid>\n </Grid>\n </Box>\n </ThemeProvider>\n );\n};\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n \nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}